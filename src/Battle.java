/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jeffrey Thor
 */
public class Battle extends javax.swing.JFrame {
    private Character character;
    private Enemy enemy;
    private VillageWindow village;
    /**
     * Creates new form River
     */
    public Battle() {
        initComponents();
    }
    
    public void sendCharacter(Character character){
        this.character = character;
    }
    
    public void sendEnemy(Enemy enemy){
        this.enemy = enemy;
    }
    
    public void sendVillage(VillageWindow village){
        this.village = village;
    }
    
    public void updateBattleStats(){
        characterNameLabel.setText(character.getName());
        characterCurrentHealth.setText(Integer.toString(character.getHealth()));
        characterGold.setText(Integer.toString(character.getGold()));
        characterLevel.setText(Integer.toString(character.getLevel()));
        characterMaxHealth.setText(Integer.toString(character.getMaxHealth()));
        specialButton.setText(character.getSpecialAttackName());
        
        enemyTypeLabel.setText(enemy.getEnemyType());
        enemyLevel.setText(Integer.toString(enemy.getLevel()));
        enemyMaxHealth.setText(Integer.toString(enemy.getMaxHealth()));
        enemyCurrentHealth.setText(Integer.toString(enemy.getHealth()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enemyTypeLabel = new javax.swing.JLabel();
        characterNameLabel = new javax.swing.JLabel();
        attackButton = new javax.swing.JButton();
        specialButton = new javax.swing.JButton();
        inventoryButton = new javax.swing.JButton();
        escapeButton = new javax.swing.JButton();
        enemyLevelLabel = new javax.swing.JLabel();
        enemyHealthLabel = new javax.swing.JLabel();
        characterLevelLabel = new javax.swing.JLabel();
        characterHealthLabel = new javax.swing.JLabel();
        characterGoldLabel = new javax.swing.JLabel();
        enemyLevel = new javax.swing.JLabel();
        enemyMaxHealth = new javax.swing.JLabel();
        enemyCurrentHealth = new javax.swing.JLabel();
        splitEnemyHealth = new javax.swing.JLabel();
        characterLevel = new javax.swing.JLabel();
        characterMaxHealth = new javax.swing.JLabel();
        characterCurrentHealth = new javax.swing.JLabel();
        splitCharacterHealth = new javax.swing.JLabel();
        characterGold = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        enemyTypeLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        enemyTypeLabel.setText("Enemy");

        characterNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        characterNameLabel.setText("Character");

        attackButton.setText("Attack");
        attackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackButtonActionPerformed(evt);
            }
        });

        specialButton.setText("Special");

        inventoryButton.setText("Inventory");

        escapeButton.setText("Escape");
        escapeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escapeButtonActionPerformed(evt);
            }
        });

        enemyLevelLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        enemyLevelLabel.setText("Level:");

        enemyHealthLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        enemyHealthLabel.setText("Health:");

        characterLevelLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        characterLevelLabel.setText("Level:");

        characterHealthLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        characterHealthLabel.setText("Health:");

        characterGoldLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        characterGoldLabel.setText("Gold:");

        enemyLevel.setText("level");

        enemyMaxHealth.setText("max");

        enemyCurrentHealth.setText("current");

        splitEnemyHealth.setText("/");

        characterLevel.setText("level");

        characterMaxHealth.setText("max");

        characterCurrentHealth.setText("current");

        splitCharacterHealth.setText("/");

        characterGold.setText("gold");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(attackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inventoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(enemyLevelLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(characterLevelLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(characterLevel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(enemyLevel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(characterNameLabel)
                        .addComponent(enemyTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(characterHealthLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(characterCurrentHealth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(splitCharacterHealth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(characterMaxHealth)
                        .addGap(92, 92, 92)
                        .addComponent(characterGoldLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(characterGold))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(escapeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(specialButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(62, 62, 62))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(enemyHealthLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(enemyCurrentHealth)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(splitEnemyHealth)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(enemyMaxHealth))))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(enemyTypeLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enemyLevelLabel)
                    .addComponent(enemyHealthLabel)
                    .addComponent(enemyLevel)
                    .addComponent(enemyCurrentHealth)
                    .addComponent(splitEnemyHealth)
                    .addComponent(enemyMaxHealth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(characterNameLabel)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(characterLevelLabel)
                    .addComponent(characterHealthLabel)
                    .addComponent(characterGoldLabel)
                    .addComponent(characterLevel)
                    .addComponent(characterMaxHealth)
                    .addComponent(characterCurrentHealth)
                    .addComponent(splitCharacterHealth)
                    .addComponent(characterGold))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attackButton)
                    .addComponent(specialButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inventoryButton)
                    .addComponent(escapeButton))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void escapeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escapeButtonActionPerformed
        // TODO add your handling code here:
        village.updateStatLabels();
        this.setVisible(false);
        village.setVisible(true);
    }//GEN-LAST:event_escapeButtonActionPerformed

    private void attackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackButtonActionPerformed
        // TODO add your handling code here:
        enemy.setHealth(enemy.getHealth()-character.primaryAttack());
        if(enemy.getHealth() <= 0){
            character.setExperience((int) (character.getExperience()+Math.sqrt(enemy.getLevel()*1000)));
            this.setVisible(false);
            village.setVisible(true);
            if(character.getExperience() >= character.getLevel()*20){
                character.setLevel(character.getLevel()+1);
                character.setMaxHealth(character.getMaxHealth()+character.getLevel()*20);
                character.setHealth(character.getMaxHealth());
                character.setExperience(0);
            }
            village.updateStatLabels();
            return;
        }
        character.setHealth(character.getHealth()-enemy.primaryAttack());
        if(character.getHealth() <= 0){
            this.setVisible(false);
            village.setVisible(true);
            character.setGold(character.getGold()/2);
            village.updateStatLabels();
            return;
        }
        updateBattleStats();
    }//GEN-LAST:event_attackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Battle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Battle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Battle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Battle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Battle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attackButton;
    private javax.swing.JLabel characterCurrentHealth;
    private javax.swing.JLabel characterGold;
    private javax.swing.JLabel characterGoldLabel;
    private javax.swing.JLabel characterHealthLabel;
    private javax.swing.JLabel characterLevel;
    private javax.swing.JLabel characterLevelLabel;
    private javax.swing.JLabel characterMaxHealth;
    private javax.swing.JLabel characterNameLabel;
    private javax.swing.JLabel enemyCurrentHealth;
    private javax.swing.JLabel enemyHealthLabel;
    private javax.swing.JLabel enemyLevel;
    private javax.swing.JLabel enemyLevelLabel;
    private javax.swing.JLabel enemyMaxHealth;
    private javax.swing.JLabel enemyTypeLabel;
    private javax.swing.JButton escapeButton;
    private javax.swing.JButton inventoryButton;
    private javax.swing.JButton specialButton;
    private javax.swing.JLabel splitCharacterHealth;
    private javax.swing.JLabel splitEnemyHealth;
    // End of variables declaration//GEN-END:variables
}
