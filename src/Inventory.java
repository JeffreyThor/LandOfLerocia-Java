/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jeffreythor
 */
public class Inventory extends javax.swing.JFrame {
    private Character character;
    private VillageWindow village;
    private Battle battle;
    /**
     * Creates new form Inventory
     */
    public Inventory() {
        initComponents();
    }
    
    public void sendCharacter(Character character){
        this.character = character;
    }
    
    public void sendVillage(VillageWindow village){
        this.village = village;
    }
    public void sendBattle(Battle battle){
        this.battle = battle;
    }
    
    public void updateInventory(){
        numPotions.setText(Integer.toString(character.inventory[0]));
        numStrongPotions.setText(Integer.toString(character.inventory[1]));
        numStrongerPotions.setText(Integer.toString(character.inventory[2]));
        numStrongestPotions.setText(Integer.toString(character.inventory[3]));
        characterHealth.setText(Integer.toString(character.getHealth()));
        characterMaxHealth.setText(Integer.toString(character.getMaxHealth()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        potionLabel = new javax.swing.JLabel();
        strongPotionLabel = new javax.swing.JLabel();
        strongerPotionLabel = new javax.swing.JLabel();
        strongestPotionLabel = new javax.swing.JLabel();
        usePotion = new javax.swing.JButton();
        useStrongPotion = new javax.swing.JButton();
        useStrongerPotion = new javax.swing.JButton();
        useStrongestPotion = new javax.swing.JButton();
        numPotions = new javax.swing.JLabel();
        numStrongPotions = new javax.swing.JLabel();
        numStrongerPotions = new javax.swing.JLabel();
        numStrongestPotions = new javax.swing.JLabel();
        itemLabel = new javax.swing.JLabel();
        ownedLabel = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        healthLabel = new javax.swing.JLabel();
        characterHealth = new javax.swing.JLabel();
        characterMaxHealth = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        potionLabel.setText("Potion");

        strongPotionLabel.setText("Strong Potion");

        strongerPotionLabel.setText("Stronger Potion");

        strongestPotionLabel.setText("Strongest potion");

        usePotion.setText("Use");
        usePotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usePotionActionPerformed(evt);
            }
        });

        useStrongPotion.setText("Use");
        useStrongPotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useStrongPotionActionPerformed(evt);
            }
        });

        useStrongerPotion.setText("Use");
        useStrongerPotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useStrongerPotionActionPerformed(evt);
            }
        });

        useStrongestPotion.setText("Use");
        useStrongestPotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useStrongestPotionActionPerformed(evt);
            }
        });

        numPotions.setText("0");

        numStrongPotions.setText("0");

        numStrongerPotions.setText("0");

        numStrongestPotions.setText("0");

        itemLabel.setText("ITEM");

        ownedLabel.setText("OWNED");

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        healthLabel.setText("HEALTH:");

        jLabel1.setText("/");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(strongestPotionLabel)
                    .addComponent(itemLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(potionLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(strongPotionLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(strongerPotionLabel, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numPotions)
                            .addComponent(numStrongPotions)
                            .addComponent(numStrongerPotions)
                            .addComponent(numStrongestPotions))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usePotion)
                            .addComponent(useStrongPotion)
                            .addComponent(useStrongerPotion)
                            .addComponent(useStrongestPotion))
                        .addGap(59, 59, 59))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(healthLabel)
                            .addComponent(ownedLabel))
                        .addGap(18, 18, 18)
                        .addComponent(characterHealth)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(characterMaxHealth)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exitButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemLabel)
                    .addComponent(ownedLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(potionLabel)
                    .addComponent(usePotion)
                    .addComponent(numPotions))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(strongPotionLabel)
                    .addComponent(useStrongPotion)
                    .addComponent(numStrongPotions))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(strongerPotionLabel)
                    .addComponent(useStrongerPotion)
                    .addComponent(numStrongerPotions))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(strongestPotionLabel)
                    .addComponent(useStrongestPotion)
                    .addComponent(numStrongestPotions))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(characterHealth, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(exitButton)
                        .addComponent(healthLabel)
                        .addComponent(characterMaxHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usePotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usePotionActionPerformed
        // TODO add your handling code here:
        if(character.inventory[0] > 0 && character.getHealth() < character.getMaxHealth()){
            character.setHealth(character.getHealth() + 40);
            character.inventory[0] -= 1;
            if(character.getHealth() > character.getMaxHealth())
                character.setHealth(character.getMaxHealth());
            updateInventory();
            if(village == null)
                battle.updateBattleStats();
            else if(battle == null)
                village.updateStatLabels();
        }
    }//GEN-LAST:event_usePotionActionPerformed

    private void useStrongPotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useStrongPotionActionPerformed
        // TODO add your handling code here:
        if(character.inventory[1] > 0 && character.getHealth() < character.getMaxHealth()){
            character.setHealth(character.getHealth() + 100);
            character.inventory[1] -= 1;
            if(character.getHealth() > character.getMaxHealth())
                character.setHealth(character.getMaxHealth());
            updateInventory();
            if(village == null)
                battle.updateBattleStats();
            else if(battle == null)
                village.updateStatLabels();
        }
    }//GEN-LAST:event_useStrongPotionActionPerformed

    private void useStrongerPotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useStrongerPotionActionPerformed
        // TODO add your handling code here:
        if(character.inventory[2] > 0 && character.getHealth() < character.getMaxHealth()){
            character.setHealth(character.getHealth() + 500);
            character.inventory[2] -= 1;
            if(character.getHealth() > character.getMaxHealth())
                character.setHealth(character.getMaxHealth());
            updateInventory();
            if(village == null)
                battle.updateBattleStats();
            else if(battle == null)
                village.updateStatLabels();
        }
    }//GEN-LAST:event_useStrongerPotionActionPerformed

    private void useStrongestPotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useStrongestPotionActionPerformed
        // TODO add your handling code here:
        if(character.inventory[3] > 0 && character.getHealth() < character.getMaxHealth()){
            character.setHealth(character.getHealth() + character.getMaxHealth()/2);
            character.inventory[3] -= 1;
            if(character.getHealth() > character.getMaxHealth())
                character.setHealth(character.getMaxHealth());
            updateInventory();
            if(village == null)
                battle.updateBattleStats();
            else if(battle == null)
                village.updateStatLabels();
        }
    }//GEN-LAST:event_useStrongestPotionActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        if(village == null)
            battle.setVisible(true);
        else if(battle == null)
            village.setVisible(true);
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel characterHealth;
    private javax.swing.JLabel characterMaxHealth;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel healthLabel;
    private javax.swing.JLabel itemLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel numPotions;
    private javax.swing.JLabel numStrongPotions;
    private javax.swing.JLabel numStrongerPotions;
    private javax.swing.JLabel numStrongestPotions;
    private javax.swing.JLabel ownedLabel;
    private javax.swing.JLabel potionLabel;
    private javax.swing.JLabel strongPotionLabel;
    private javax.swing.JLabel strongerPotionLabel;
    private javax.swing.JLabel strongestPotionLabel;
    private javax.swing.JButton usePotion;
    private javax.swing.JButton useStrongPotion;
    private javax.swing.JButton useStrongerPotion;
    private javax.swing.JButton useStrongestPotion;
    // End of variables declaration//GEN-END:variables
}
