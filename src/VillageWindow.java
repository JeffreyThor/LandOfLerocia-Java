
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import static java.lang.Integer.MAX_VALUE;
import java.util.Random;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jeffrey Thor
 */
public class VillageWindow extends javax.swing.JFrame {
    private Character character;
    private Random rand = new Random();
    /**
     * Creates new form VillageWindow
     */
    public VillageWindow() {
        initComponents();
    }
    
    public void sendCharacter(Character character){
        this.character = character;
    }
    
    public void updateStatLabels(){
        characterCurrentHealth.setText(Integer.toString(character.getHealth()));
        characterGold.setText(Integer.toString(character.getGold()));
        characterLevel.setText(Integer.toString(character.getLevel()));
        characterMaxHealth.setText(Integer.toString(character.getMaxHealth()));
        characterName.setText(character.getName());
        characterType.setText(character.getCharacterType());
        if(character.getLevel() < 10)
            forestButton.setEnabled(false);
        else
            forestButton.setEnabled(true);
        if(character.getLevel() < 15)
            cliffButton.setEnabled(false);
        else
            cliffButton.setEnabled(true);
        if(character.getLevel() < 20)
            mountainButton.setEnabled(false);
        else
            mountainButton.setEnabled(true);
        if(character.getStageNum() == 7){
            pathButton.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        villageLabel = new javax.swing.JLabel();
        homeButton = new javax.swing.JButton();
        pathButton = new javax.swing.JButton();
        inventoryButton = new javax.swing.JButton();
        shopButton = new javax.swing.JButton();
        riverButton = new javax.swing.JButton();
        forestButton = new javax.swing.JButton();
        cliffButton = new javax.swing.JButton();
        mountainButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();
        characterName = new javax.swing.JLabel();
        characterTypeLabel = new javax.swing.JLabel();
        levelLabel = new javax.swing.JLabel();
        healthLabel = new javax.swing.JLabel();
        goldLabel = new javax.swing.JLabel();
        characterType = new javax.swing.JLabel();
        characterLevel = new javax.swing.JLabel();
        characterMaxHealth = new javax.swing.JLabel();
        characterCurrentHealth = new javax.swing.JLabel();
        characterGold = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        villageLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        villageLabel.setText("Village");

        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        pathButton.setText("Path");
        pathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathButtonActionPerformed(evt);
            }
        });

        inventoryButton.setText("Inventory");
        inventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryButtonActionPerformed(evt);
            }
        });

        shopButton.setText("Shop");
        shopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shopButtonActionPerformed(evt);
            }
        });

        riverButton.setText("River");
        riverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                riverButtonActionPerformed(evt);
            }
        });

        forestButton.setText("Forest");
        forestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forestButtonActionPerformed(evt);
            }
        });

        cliffButton.setText("Cliff");
        cliffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cliffButtonActionPerformed(evt);
            }
        });

        mountainButton.setText("Mountain");
        mountainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mountainButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        characterName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        characterName.setText("Character Name");

        characterTypeLabel.setText("CHARACTER:");

        levelLabel.setText("LEVEL:");

        healthLabel.setText("HEALTH:");

        goldLabel.setText("GOLD:");

        characterType.setText("type");

        characterLevel.setText("level");

        characterMaxHealth.setText("max");

        characterCurrentHealth.setText("current");

        characterGold.setText("gold");

        jLabel1.setText("/");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(characterTypeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(characterType)
                .addGap(30, 30, 30)
                .addComponent(levelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(characterLevel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(healthLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(characterCurrentHealth))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(characterName, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(characterMaxHealth)
                .addGap(38, 38, 38)
                .addComponent(goldLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(characterGold)
                .addGap(15, 15, 15))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(villageLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inventoryButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(riverButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(forestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(saveButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cliffButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mountainButton))
                                    .addComponent(shopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(156, 156, 156)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pathButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(villageLabel)
                .addGap(29, 29, 29)
                .addComponent(characterName, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(characterTypeLabel)
                    .addComponent(levelLabel)
                    .addComponent(healthLabel)
                    .addComponent(goldLabel)
                    .addComponent(characterType)
                    .addComponent(characterLevel)
                    .addComponent(characterMaxHealth)
                    .addComponent(characterCurrentHealth)
                    .addComponent(characterGold)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(homeButton)
                .addGap(18, 18, 18)
                .addComponent(pathButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inventoryButton)
                    .addComponent(shopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mountainButton)
                    .addComponent(forestButton)
                    .addComponent(riverButton)
                    .addComponent(cliffButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quitButton)
                    .addComponent(saveButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // TODO add your handling code here:
        character.setHealth(character.getMaxHealth());
        this.updateStatLabels();
    }//GEN-LAST:event_homeButtonActionPerformed

    private void forestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forestButtonActionPerformed
        // TODO add your handling code here:
        Battle battle = new Battle();
        Enemy enemy;
        int enemySelection = rand.nextInt(MAX_VALUE) % 2;
        if(enemySelection == 0){
            if(character.getLevel() > 16){
                enemy = new Brute("brute", 16);
            }
            else{
                enemy = new Brute("brute", character.getLevel() + (rand.nextInt(MAX_VALUE)%3-1));
            }
            battle.sendEnemy(enemy);
        }
        else if(enemySelection == 1){
            if(character.getLevel() > 16){
                enemy = new Wolf("wolf", 16);
            }
            else{
                enemy = new Wolf("wolf", character.getLevel() + (rand.nextInt(MAX_VALUE)%3-1));
            }
            battle.sendEnemy(enemy);
        }
        battle.sendCharacter(character);
        battle.sendVillage(this);
        battle.updateBattleStats();
        battle.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_forestButtonActionPerformed

    private void riverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_riverButtonActionPerformed
        // TODO add your handling code here:
        Battle battle = new Battle();
        Enemy enemy;
        int enemySelection = rand.nextInt(MAX_VALUE) % 2;
        System.out.println(enemySelection);
        if(enemySelection == 0){
            if(character.getLevel() > 11){
                enemy = new Tank("tank", 11);
            }
            else{
                do{
                    enemy = new Tank("tank", character.getLevel() + (rand.nextInt(MAX_VALUE)%3-1));
                }while(enemy.getLevel() <= 0);
            }
            battle.sendEnemy(enemy);
        }
        else if(enemySelection == 1){
            if(character.getLevel() > 11){
                enemy = new Beast("beast", 11);
            }
            else{
                do{
                    enemy = new Beast("beast", character.getLevel() + (rand.nextInt(MAX_VALUE)%3-1));
                }while(enemy.getLevel() == 0);
            }
            battle.sendEnemy(enemy);
        }
        battle.sendCharacter(character);
        battle.sendVillage(this);
        battle.updateBattleStats();
        battle.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_riverButtonActionPerformed

    private void cliffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cliffButtonActionPerformed
        // TODO add your handling code here:
        Battle battle = new Battle();
        Enemy enemy;
        int enemySelection = rand.nextInt(MAX_VALUE) % 2;
        if(enemySelection == 0){
            if(character.getLevel() > 21){
                enemy = new Witch("witch", 21);
            }
            else{
                enemy = new Witch("witch", character.getLevel() + (rand.nextInt(MAX_VALUE)%3-1));
            }
            battle.sendEnemy(enemy);
        }
        else if(enemySelection == 1){
            if(character.getLevel() > 21){
                enemy = new Ghost("ghost", 21);
            }
            else{
                enemy = new Ghost("ghost", character.getLevel() + (rand.nextInt(MAX_VALUE)%3-1));
            }
            battle.sendEnemy(enemy);
        }
        battle.sendCharacter(character);
        battle.sendVillage(this);
        battle.updateBattleStats();
        battle.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_cliffButtonActionPerformed

    private void mountainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mountainButtonActionPerformed
        // TODO add your handling code here:
        Battle battle = new Battle();
        Enemy enemy;
        int enemySelection = rand.nextInt(MAX_VALUE) % 6;
        switch (enemySelection) {
            case 0:
                enemy = new Tank("tank", character.getLevel() + (rand.nextInt(MAX_VALUE)%3-1));
                break;
            case 1:
                enemy = new Beast("beast", character.getLevel() + (rand.nextInt(MAX_VALUE)%3-1));
                break;
            case 2:
                enemy = new Brute("brute", character.getLevel() + (rand.nextInt(MAX_VALUE)%3-1));
                break;
            case 3:
                enemy = new Wolf("wolf", character.getLevel() + (rand.nextInt(MAX_VALUE)%3-1));
                break;
            case 4:
                enemy = new Witch("witch", character.getLevel() + (rand.nextInt(MAX_VALUE)%3-1));
                break;
            case 5:
                enemy = new Ghost("ghost", character.getLevel() + (rand.nextInt(MAX_VALUE)%3-1));
                break;
            default:
                break;
        }
        battle.sendCharacter(character);
        battle.sendVillage(this);
        battle.updateBattleStats();
        battle.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_mountainButtonActionPerformed

    private void shopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shopButtonActionPerformed
        // TODO add your handling code here:
        Shop shop = new Shop();
        shop.sendCharacter(character);
        shop.sendVillage(this);
        shop.updateShop();
        shop.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_shopButtonActionPerformed

    private void inventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryButtonActionPerformed
        // TODO add your handling code here:
        Inventory inventory = new Inventory();
        inventory.sendCharacter(character);
        inventory.sendVillage(this);
        inventory.updateInventory();
        this.setVisible(false);
        inventory.setVisible(true);
    }//GEN-LAST:event_inventoryButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        try {
        BufferedWriter fileOut = new BufferedWriter(new FileWriter("savedGame.txt"));
            fileOut.write(character.getName()+"\n");
            fileOut.write(character.getCharacterType()+"\n");
            fileOut.write(character.getExperience()+"\n");
            fileOut.write(character.getLevel()+"\n");
            fileOut.write(character.getMaxHealth()+"\n");
            fileOut.write(character.getHealth()+"\n");
            fileOut.write(character.getGold()+"\n");
            fileOut.write(character.getSpecialAttackName()+"\n");
            fileOut.write(character.getStageNum()+"\n");
            for(int i = 0; i < 4; i++){
                fileOut.write(character.inventory[i]+"\n");
            }
//            fileOut.write(character.inventory[0]+"\n");
//            fileOut.write(character.inventory[1]+"\n");
//            fileOut.write(character.inventory[2]+"\n");
//            fileOut.write(character.inventory[3]+"\n");
            fileOut.close();
        } catch (IOException e) {}
    }//GEN-LAST:event_saveButtonActionPerformed

    private void pathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathButtonActionPerformed
        // TODO add your handling code here:
        StoryMode story = new StoryMode();
        story.sendVillage(this);
        story.sendCharacter(character);
        story.playStory();
        this.setVisible(false);
        story.setVisible(true);
    }//GEN-LAST:event_pathButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VillageWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VillageWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VillageWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VillageWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VillageWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel characterCurrentHealth;
    private javax.swing.JLabel characterGold;
    private javax.swing.JLabel characterLevel;
    private javax.swing.JLabel characterMaxHealth;
    private javax.swing.JLabel characterName;
    private javax.swing.JLabel characterType;
    private javax.swing.JLabel characterTypeLabel;
    private javax.swing.JButton cliffButton;
    private javax.swing.JButton forestButton;
    private javax.swing.JLabel goldLabel;
    private javax.swing.JLabel healthLabel;
    private javax.swing.JButton homeButton;
    private javax.swing.JButton inventoryButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JButton mountainButton;
    private javax.swing.JButton pathButton;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton riverButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton shopButton;
    private javax.swing.JLabel villageLabel;
    // End of variables declaration//GEN-END:variables
}
